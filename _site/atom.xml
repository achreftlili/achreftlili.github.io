<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Achref Tlili</title>
 <link href="https://achreftlili.github.io//atom.xml" rel="self"/>
 <link href="https://achreftlili.github.io//"/>
 <updated>2015-08-27T15:18:01+02:00</updated>
 <id>https://achreftlili.github.io/</id>
 <author>
   <name>Mark Otto</name>
   <email>tliliachref1990@gmail.com</email>
 </author>

 
 <entry>
   <title>Download & upload files in data base with symfony!</title>
   <link href="https://achreftlili.github.io//2015/08/27/Download-upload-files-in-data-base-with-symfony-form/"/>
   <updated>2015-08-27T00:00:00+02:00</updated>
   <id>https://achreftlili.github.io//2015/08/27/Download-upload-files-in-data-base-with-symfony-form</id>
   <content type="html">&lt;p&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.7/styles/default.min.css&quot;&gt;
&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.7/highlight.min.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey every body for this Post I am gonna share with you how you upload files in your database and next how to download them  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;1-The Schema of our Entity &quot;Files&quot;&lt;/h5&gt;

&lt;p&gt;we gonna start with the Entity File which will be used in this Post&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;namespace Acme\Bundle\FileBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * File
 */
class File
{
    /**
     * @var integer
     */
    private $id;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $type;

    /**
     * @var \DateTime
     */
    private $creationDate;

    /**
     * @var string
     */
    private $data;

    /**
     * @var string
     */
    private $size;


    /**
     * @var string
     */

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this-&amp;gt;id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return File
     */
    public function setName($name)
    {
        $this-&amp;gt;name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this-&amp;gt;name;
    }

    /**
     * Set type
     *
     * @param string $type
     * @return File
     */
    public function setType($type)
    {
        $this-&amp;gt;type = $type;

        return $this;
    }

    /**
     * Get type
     *
     * @return string
     */
    public function getType()
    {
        return $this-&amp;gt;type;
    }

    /**
     * Set creationDate
     *
     * @param \DateTime $creationDate
     * @return File
     */
    public function setCreationDate($creationDate)
    {
        $this-&amp;gt;creationDate = $creationDate;

        return $this;
    }

    /**
     * Get creationDate
     *
     * @return \DateTime
     */
    public function getCreationDate()
    {
        return $this-&amp;gt;creationDate;
    }

    /**
     * Set data
     *
     * @param string $data
     * @return File
     */
    public function setData($data)
    {
        $this-&amp;gt;data = $data;

        return $this;
    }

    /**
     * Get data
     *
     * @return string
     */
    public function getData()
    {
        return $this-&amp;gt;data;
    }

    /**
     * Set size
     *
     * @param string $size
     * @return File
     */
    public function setSize($size)
    {
        $this-&amp;gt;size = $size;

        return $this;
    }

    /**
     * Get size
     *
     * @return string
     */
    public function getSize()
    {
        return $this-&amp;gt;size;
    }

  }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next we add the mapping of the entity with yml&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;Acme\Bundle\FileBundle\Entity\File:
    type: entity
    table: file
    indexes:
        site_idx:
            columns:
                - id
    id:
        id:
            type: integer
            nullable: false
            unsigned: false
            id: true
            generator:
                strategy: IDENTITY
    fields:
        name:
            type: string
            nullable: false
            length: 255
            fixed: false
        type:
            type: string
            nullable: true
            length: 255
            fixed: false
        creationDate:
            type: datetime
            nullable: false
            default: &amp;#39;0000-00-00 00:00:00&amp;#39;
            column: creation_date
        data:
            type: blob
            nullable: true
            length: null
            fixed: false

        size:
            type: string
            nullable: true
            length: 100
            fixed: false
            column: size

    lifecycleCallbacks: {  }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;2-Generate the CRUD of the Entity File&lt;/h5&gt;

&lt;p&gt;for generating the CRUD we run in our project file the command &amp;quot;app/console doctrine: generate: crud&amp;quot; like the picture below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/CRUD.png&quot; alt=&quot;Main Page&quot; &gt;&lt;/p&gt;

&lt;h5&gt;3-change the Form builder of the File Entity&lt;/h5&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;public function buildForm(FormBuilderInterface $builder, array $options)
   {
       $builder// for all this attributs w shall delete them
           -&amp;gt;add(&amp;#39;name&amp;#39;)
           -&amp;gt;add(&amp;#39;type&amp;#39;)
           -&amp;gt;add(&amp;#39;creationDate&amp;#39;)
           -&amp;gt;add(&amp;#39;data&amp;#39;)
           -&amp;gt;add(&amp;#39;size&amp;#39;)
       ;
   }
   // for all these attributes we shall delete them
   =&amp;gt;Result

   public function buildForm(FormBuilderInterface $builder, array $options)
      {
          $builder// for all this attributs w shall delete them

          ;
      }
      //in this case we will have an empty form with a submit button so we will add a file input form&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;4-Add the file input in new.html.twig&lt;/h5&gt;

&lt;p&gt;we will add a file input with name &amp;quot;myFile&amp;quot; this will be used in the submit action &amp;quot;create action&amp;quot;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;{% extends &amp;#39;::base.html.twig&amp;#39; %}

{% block body -%}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;File creation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    {{ form_start(form,{ &amp;#39;attr&amp;#39;: {&amp;#39;enctype&amp;#39;: &amp;#39;multipart/form-data&amp;#39;,&amp;#39;id&amp;#39;: &amp;#39;file_upload_form&amp;#39;  }  } ) }}
//with enctype: &amp;#39;multipart/form-data&amp;#39; No characters are encoded. This value is required when you are using forms that have //a file upload control
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt;   &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;file&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myFile&amp;quot;&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    //you will need to put it inside the form like this or add it in the form builder
    {{ form_end(form) }}

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;record_actions&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{{ path(&amp;#39;file&amp;#39;) }}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            Back to the list
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
{% endblock %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5&gt;5-change the create Action&lt;/h5&gt;

&lt;p&gt;changing the create action so that the file selected will be saved correctly&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;if ($form-&amp;gt;isValid()) {//if the form is validated

           $em = $this-&amp;gt;getDoctrine()-&amp;gt;getManager();

           $entity-&amp;gt;setCreationDate(new \DateTime());//setting the different variables of our file
           $entity-&amp;gt;setSize($_FILES[&amp;#39;myFile&amp;#39;][&amp;#39;size&amp;#39;]);
           $entity-&amp;gt;setName($_FILES[&amp;#39;myFile&amp;#39;][&amp;#39;name&amp;#39;]);
           $entity-&amp;gt;setType($_FILES[&amp;#39;myFile&amp;#39;][&amp;#39;type&amp;#39;]);
           $entity-&amp;gt;setData(file_get_contents($_FILES[&amp;#39;myFile&amp;#39;][&amp;#39;tmp_name&amp;#39;]));
           //the attribute Data is the most important one because it&amp;#39;s where we put our file Data

           $em-&amp;gt;persist($entity);//persist the file
           $em-&amp;gt;flush();
         }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;now we can upload any file in our database next we will see how to download them&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;5-create Download Action&lt;/h5&gt;

&lt;p&gt;we gonna create new action which will download our files by giving the id&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;//the route name is &amp;quot;file_download&amp;quot;
public function downloadAction($id) {
        $em = $this-&amp;gt;getDoctrine()-&amp;gt;getManager();

        $entity = $em-&amp;gt;getRepository(&amp;#39;FileBundle:File&amp;#39;)-&amp;gt;find($id);

        if (!$entity) {
            throw $this-&amp;gt;createNotFoundException(&amp;#39;Unable to find File entity.&amp;#39;);
        }



        $response = new \Symfony\Component\HttpFoundation\Response(stream_get_contents($entity-&amp;gt;getDataFile()), 200, array(
            &amp;#39;Content-Type&amp;#39; =&amp;gt; $entity-&amp;gt;getTypeFile(),
            &amp;#39;Content-Length&amp;#39; =&amp;gt; $entity-&amp;gt;getSizeFile(),
            &amp;#39;Content-Disposition&amp;#39; =&amp;gt; &amp;#39;attachment; filename=&amp;quot;&amp;#39; . $entity-&amp;gt;getNameFile() . &amp;#39;&amp;quot;&amp;#39;,
        ));

        return $response;
    }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;this action selects the entity and use the different attributes the give a response of type file by setting the type, the length and Disposition for the content of the response&lt;/p&gt;

&lt;p&gt;so we use the download action like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; {{ path(&amp;#39;file_download&amp;#39;,  { &amp;#39;id&amp;#39;: entity.id } ) }}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;_blank&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Download&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
   //this download link will be opened in a new angle&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;when I worked with upload file I got a problem with uploading the file with Ajax without refreshing ,I found a solution about uploading the file in a hidden iframe and when the iframe is ready I make a call to display the list of the uploaded files&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Ajaxify the Pagination of knp Paginator Bundle?</title>
   <link href="https://achreftlili.github.io//2015/08/23/Ajaxify-Knp-Bundle-pagination/"/>
   <updated>2015-08-23T00:00:00+02:00</updated>
   <id>https://achreftlili.github.io//2015/08/23/Ajaxify-Knp-Bundle-pagination</id>
   <content type="html">&lt;p&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.7/styles/default.min.css&quot;&gt;
&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.7/highlight.min.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Ajaxify the Pagination of &lt;a href=&quot;https://github.com/KnpLabs/KnpPaginatorBundle&quot;&gt;knp Paginator&lt;/a&gt;&lt;br&gt;
first of all you will need to have knp Paginator installed which is easy :p so first of all
&lt;h4&gt;1-change the pagination view to bootstrap&lt;/h4&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;//you-Project/vendor/knplabs/knp-paginator-bundle/Resources/views/Pagination/pagination.html.twig

{% set first = 1%}

{% set previous = max(range(1, current-1)) %}
{% set last = pagesNumber %}
{% set next = min( last, current+1 ) %}
{% set pages_range = range(max(first, current-3), min(last, current+3)) %}

{% if pagesNumber &amp;gt; 1 %}
    {%set first = 1 %}
    {%set last = pagesNumber %}
    {%set query=  {}  %}
    {%set pageParameterName = &amp;#39;page&amp;#39; %}

&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;pagination&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;


    {% if first is  defined and current != first %}
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;previous&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;routeBringer(&amp;#39;{{ path(route, query|merge({(pageParameterName): previous&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}))&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;}}&amp;#39;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;table_div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;)&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ &amp;#39;Previous&amp;#39;|trans }}&amp;quot;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    {% else %}
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;disabled&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{ &amp;#39;Previous&amp;#39;|trans }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    {% endif %}





    {% for page in pages_range %}
        {% if page != current %}
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;routeBringer(&amp;#39;{{ path(route, query|merge({(pageParameterName): page&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}))&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;}}&amp;#39;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;table_div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;)&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ page}}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        {% else %}
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;active&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{ page }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        {% endif %}

    {% endfor %}




    {% if last is defined and current != last %}
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;onclick=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;routeBringer(&amp;#39;{{ path(route, query|merge({(pageParameterName): next&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}))&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;}}&amp;#39;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;table_div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;)&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ &amp;#39;Next&amp;#39;|trans }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    {% else %}
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;disabled&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{ &amp;#39;Next&amp;#39;|trans }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    {% endif %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
{% endif %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;as you can notice in the twig code a call to routeBringer() function which is  exlpained in this &lt;a href=&quot;&quot;&gt;Post&lt;/a&gt; so this function will use the $.ajax() to bring the response in a specific div
i added this function in the three button type Previous,the number page button and in the next page button that will prevent the button from refreshing all the page with each pagination change  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;the previous twig will be used in our main page&lt;/p&gt;

&lt;h4&gt;2-How to reload the table with each pagination change&lt;/h4&gt;

&lt;p&gt;the goal of this post is help you create a main page that load the table with ajax like this screen shot&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mainpage.png&quot; alt=&quot;Main Page&quot; &gt;&lt;/p&gt;

&lt;p&gt;the action of the previous page&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public function indexpaginatorAction(Request $request) {&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;//this action bring only the container twig view that will call later the dynamic table with our ajax function&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;        return $this-&amp;gt;render(&amp;#39;ContactBundle:Contact:Paginatorindex.html.twig&amp;#39;, array();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;the twig template:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;{% extends &amp;#39;::home.html.twig&amp;#39; %}&lt;/span&gt;


&lt;span class=&quot;x&quot;&gt;{% block body %}&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    &amp;lt;div id=&amp;quot;table_div&amp;quot;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;{% endblock  %}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;{% block javascripts %}&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;        &amp;lt;script src=&amp;quot;{{ asset(&amp;#39;assets/js/ajaxstand.js&amp;#39;)  }}&amp;quot;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;        &amp;lt;script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;            $(document).ready(function () {&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;            routeBringer( &amp;quot;  {{  path(&amp;#39;slidepaginator&amp;#39;) }}&amp;quot;&amp;#39;, &amp;#39;table_div&amp;#39;);//slidepaginator name of the route that bring the slide of your table,so when your page is loaded automatically the table will be loaded&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;           });&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;       &amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;{% endblock  %}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;after reading the twig template w notice that we gonna use the slidepaginator route this route will bring only the table&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;the view of slidepaginator route&lt;/p&gt;

&lt;p&gt;the action of slidepaginator route&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;x&quot;&gt;public function slidespaginatorAction(Request $request) {&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    $page = $request-&amp;gt;query-&amp;gt;get(&amp;#39;page&amp;#39;, 1);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    //count the number of row in Conatct Table ,that will help us in the request for the offset variable&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $myCount_old = $em-&amp;gt;createQuery(&amp;#39;SELECT COUNT(c) FROM Test1\ContactBundle\Entity\Contact c &amp;#39;)&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            -&amp;gt;getSingleScalarResult();&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    //we check if the number of row is bigger then our limit per page which is 4 you can change that by changing 4 by your prefered choice also the variable $limit&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    if ($myCount_old &amp;lt; 4) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $myCount = 1;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    } else {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $mod = $myCount_old % 4;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $myCount = (int) ($myCount_old / 4);&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;        if ($mod != 0) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            $myCount = $myCount + 1;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //the variable $mycount is the number of pages in your pagination&lt;/span&gt;


&lt;span class=&quot;x&quot;&gt;    $limit = 4;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    if ($page == 1) {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $offset = 0;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    } else {&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;        $offset = ($page - 1) * $limit;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    }&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    //the variable $offset is from where our query will begin the selection of row&lt;/span&gt;



&lt;span class=&quot;x&quot;&gt;    //with ResultSetMapping you can map arbitrary SQL code to objects&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $rsm = new ResultSetMapping();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $rsm-&amp;gt;addEntityResult(&amp;#39;Test1\ContactBundle\Entity\Contact&amp;#39;, &amp;#39;c&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $rsm-&amp;gt;addFieldResult(&amp;#39;c&amp;#39;, &amp;#39;id&amp;#39;, &amp;#39;id&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $rsm-&amp;gt;addFieldResult(&amp;#39;c&amp;#39;, &amp;#39;nom&amp;#39;, &amp;#39;nom&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $rsm-&amp;gt;addFieldResult(&amp;#39;c&amp;#39;, &amp;#39;prenom&amp;#39;, &amp;#39;prenom&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $rsm-&amp;gt;addFieldResult(&amp;#39;c&amp;#39;, &amp;#39;adresse&amp;#39;, &amp;#39;adresse&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $rsm-&amp;gt;addFieldResult(&amp;#39;c&amp;#39;, &amp;#39;email&amp;#39;, &amp;#39;email&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $rsm-&amp;gt;addFieldResult(&amp;#39;c&amp;#39;, &amp;#39;tel&amp;#39;, &amp;#39;tel&amp;#39;);&lt;/span&gt;


&lt;span class=&quot;x&quot;&gt;    //this is our main query that select our result data&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $query = $this-&amp;gt;getDoctrine()-&amp;gt;getManager()-&amp;gt;createNativeQuery(&amp;quot;select id ,prenom,nom ,email,adresse,tel from contact inner join &amp;quot;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            . &amp;quot;(select id from contact  order by id asc limit ? offset ?) as contact&amp;quot;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            . &amp;quot; using (id)&amp;quot;, $rsm);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;                $query-&amp;gt;setParameter(1, $limit);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;                $query-&amp;gt;setParameter(2, $offset);&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    $queryres = $query-&amp;gt;getResult();&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    //I created this query to retrieve results with deferred join which will decrease the time of response&lt;/span&gt;



&lt;span class=&quot;x&quot;&gt;    $paginator = $this-&amp;gt;get(&amp;#39;knp_paginator&amp;#39;);//call for knp_paginator service&lt;/span&gt;

&lt;span class=&quot;x&quot;&gt;    $pagination = $paginator-&amp;gt;paginate(&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;            $queryres    //return only the $queryres variable&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    );&lt;/span&gt;


&lt;span class=&quot;x&quot;&gt;    // send parameters to template&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;    return $this-&amp;gt;render(&amp;#39;ContactBundle:Contact:slidepaginator.html.twig&amp;#39;, array(&amp;#39;pagination&amp;#39; =&amp;gt; $pagination, &amp;#39;number_row&amp;#39; =&amp;gt; $myCount_old, &amp;#39;pages_number&amp;#39; =&amp;gt; $myCount, &amp;#39;page&amp;#39; =&amp;gt; $page));&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;So to recapitulate about this Post we have two action the first one is the container of our table and the other one is a dynamic action on our table which will be called with each switch of page number like Magic!!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;i hope that this will help you!!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Get Views with Ajax and Ajaxify their Forms!</title>
   <link href="https://achreftlili.github.io//2015/08/22/Ajaxify-your-form/"/>
   <updated>2015-08-22T00:00:00+02:00</updated>
   <id>https://achreftlili.github.io//2015/08/22/Ajaxify-your-form</id>
   <content type="html">&lt;p&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.7/styles/default.min.css&quot;&gt;
&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.7/highlight.min.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3&gt;Get Views with Ajax&lt;/h3&gt;

&lt;p&gt;In this post we gonna see how to add ajax to our forms in symfony which will help us create ajaxified web pages in seconds so focus :p&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;first thing you will need &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; plugin,
   then we create a javascript function which we will use to get the response of a specific route, this function get two parameters, the first is the route path the other one is the id of the div where you wanna put the response of your route.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/script&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;routeBringer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id_of_div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id_of_div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Chargement ...&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;idul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &gt;After that we gonna  call it in a button which will create a new Contact for example.


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;div_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;routeBringer(&amp;#39;&amp;#39;,&amp;#39;div_id&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Contact&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/button&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&gt;next we gonna ajaxify the form new Contact.

&lt;h3&gt;ajaxify your form&lt;/h3&gt;

&gt;the result that we get is our new form displayed then we add our script that prevent the default submit then you call the PostForm function which will handle the vars of form and make the submit with ajax


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//display our form new Contact&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[ name=&amp;quot;{{ form.vars.full_name }}&amp;quot;]&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

        &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;forms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;//prevent the default submit of our form&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;postForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//call our Function PostForm and pass as first variable the form attribute name&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;#div_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)});&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;//put the response in the div result&lt;/span&gt;


             &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&gt;this is the postForm Function


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;postForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;


 &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  * Get all form values&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;

 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serializeArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
 &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  * Throw the form values to the server!&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;

 &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;method&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;action&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;success&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&gt; after reading the function postForm we notice that there is two section the first one we put every values of our form (first attribute) in values vary after turning with.serializeArray () our form passed in the first parameter to a Javascript Array of object so that it will be ready to be encoded as a JSON string the second part is $. Ajax, jQuery function that will send our form submit as Ajax request in the success of our Ajax request the function callback will be called with data as a parameter this function will put the response html to our div result


&lt;h6&gt;I hope that I helped you for understanding some Ajax work with Symfony sorry for my English !&lt;/h6&gt;
&lt;!-- Target for toggling the sidebar `.sidebar-checkbox` is for regular
     styles, `#sidebar-checkbox` for behavior. --&gt;
&lt;input type=&quot;checkbox&quot; class=&quot;sidebar-checkbox&quot; id=&quot;sidebar-checkbox&quot;&gt;

&lt;!-- Toggleable sidebar --&gt;
&lt;div class=&quot;sidebar&quot; id=&quot;sidebar&quot;&gt;
  &lt;div class=&quot;sidebar-item&quot;&gt;
    &lt;p&gt;Achref Tlili Blog for web development&lt;/p&gt;
 &lt;img src=&quot;/images/me.jpg&quot; alt=&quot;Me&quot; style=&quot;width:100px;height:130px;&quot;&gt;
&lt;p&gt;&lt;/P&gt;
Email :tliliachref1990@gmail.com&lt;/br&gt;
 Phone Number :+216 21 945 816&lt;/br&gt;
 Address :Gammarth-Tunisia&lt;/br&gt;
  &lt;/div&gt;

  &lt;nav class=&quot;sidebar-nav&quot;&gt;
    &lt;a class=&quot;sidebar-nav-item&quot; href=&quot;/&quot;&gt;Home&lt;/a&gt;

    

    
    
      
        
      
    
      
        
      
    
      
        
          &lt;a class=&quot;sidebar-nav-item&quot; href=&quot;/Blog_purpose/&quot;&gt;Purpose  !&lt;/a&gt;
        
      
    
      
        
          &lt;a class=&quot;sidebar-nav-item&quot; href=&quot;/about/&quot;&gt;About Tlili achref&lt;/a&gt;
        
      
    
      
    
      
        
      
    
      
        
      
    
      
    
      
        
      
    
      
        
      
    
      
        
      
    
      
        
      
    
      
        
      
    



  &lt;div class=&quot;sidebar-item&quot;&gt;
    &lt;ul class=&quot;social-links&quot;&gt;
      &lt;li&gt;
        &lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt;&amp;nbsp;&lt;a target=&quot;_blank&quot;href=&quot;http://www.github.com/achreftlili&quot;&gt;GitHub&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;i class=&quot;fa fa-linkedin&quot;&gt;&lt;/i&gt;&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://tn.linkedin.com/pub/tlili-achref/a2/857/951&quot;&gt;LinkedIn&lt;/a&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;i class=&quot;fa fa-twitter&quot;&gt;&lt;/i&gt;&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;http://www.twitter.com/Audiovisuelle3&quot;&gt;Twitter&lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>
